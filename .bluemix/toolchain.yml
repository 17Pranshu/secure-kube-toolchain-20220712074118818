version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - repo
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
toolchain:
  name: 'kube-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  repo:
    $switch:
      - $expr: $env.source_provider
      - $default: 'hostedgit'
        service_id: hostedgit
        parameters:
          repo_name: 'hello-containers-{{timestamp}}'
          repo_url: "$env.type === 'link' ? $env.app_repo : 'https://github.com/open-toolchain/hello-containers'"
          source_repo_url: "$env.type === 'fork' || $env.type === 'clone' ? $env.app_repo : ''"
          type: $env.type || 'clone'
          has_issues: true
          enable_traceability: true
      - $case: 'githubconsolidated'
        service_id: githubconsolidated
        parameters:
          repo_name: 'hello-containers-{{timestamp}}'
          repo_url: "$env.type === 'link' ? $env.app_repo : 'https://github.com/open-toolchain/hello-containers'"
          source_repo_url: "$env.type === 'fork' || $env.type === 'clone' ? $env.app_repo : ''"
          type: $env.type  || 'clone'
          visibility: public
      - $case: 'github_integrated'
        service_id: github_integrated
        parameters:
          repo_name: 'hello-containers-{{timestamp}}'
          repo_url: "$env.type === 'link' ? $env.app_repo : 'https://github.com/open-toolchain/hello-containers'"
          source_repo_url: "$env.type === 'fork' || $env.type === 'clone' ? $env.app_repo : ''"
          type: "$env.type !== undefined ? $env.type : 'clone'"
          has_issues: true
          enable_traceability: true
  build:
    service_id: pipeline
    parameters:
      services:
        - repo
      name: $env.services.repo.parameters.repo_name
      ui-pipeline: true
      configuration:
        content:
          $text: pipeline.yml
        env:
          $ref: env_props.yml
        execute: true
  pr_build:
    $switch:
      - $expr: $env.enablePrPipeline
      #- $case: undefined
      - $case: true
        service_id: pipeline
        parameters:
          name: >
            $env.services.repo.service_id === 'hostedgit' ? 
            'MergeRequestTriggered':'PullRequestTriggered'
          ui-pipeline: true
          configuration:
            content:
              $text: pipelinePR.yml
            env:
              $ref: env_props.yml
            execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      app-name: $env.services.repo.parameters.repo_name
      prod-cluster-namespace: prod
    schema:
      $ref: deploy.json
